// <auto-generated />
using System;
using DiscountAPI.Infrasturcture.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiscountAPI.Infrasturcture.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211214033757_InvoiceProducts")]
    partial class InvoiceProducts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiscountAPI.Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerTypeId = 1,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 471, DateTimeKind.Local).AddTicks(6550),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 471, DateTimeKind.Local).AddTicks(4700),
                            Email = "efe_onier@windowslive.com",
                            FirstName = "Efe",
                            IsDeleted = false,
                            LastName = "Önier"
                        },
                        new
                        {
                            Id = 2,
                            CustomerTypeId = 2,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 471, DateTimeKind.Local).AddTicks(6580),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 471, DateTimeKind.Local).AddTicks(6570),
                            Email = "obefemi@martins.com",
                            FirstName = "Obefemi",
                            IsDeleted = false,
                            LastName = "Martins"
                        },
                        new
                        {
                            Id = 3,
                            CustomerTypeId = 3,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 471, DateTimeKind.Local).AddTicks(6590),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 471, DateTimeKind.Local).AddTicks(6580),
                            Email = "ricky_jade@jones.com",
                            FirstName = "Ricky Jade",
                            IsDeleted = false,
                            LastName = "Jones"
                        });
                });

            modelBuilder.Entity("DiscountAPI.Core.Entities.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("CustomerTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(1840),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(1230),
                            IsDeleted = false,
                            Type = "Employee"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(1860),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(1860),
                            IsDeleted = false,
                            Type = "Affiliate"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(1860),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(1860),
                            IsDeleted = false,
                            Type = "Customer"
                        });
                });

            modelBuilder.Entity("DiscountAPI.Core.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId")
                        .IsUnique();

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerTypeId = 1,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(6560),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(5780),
                            IsDeleted = false,
                            Percentage = 30m
                        },
                        new
                        {
                            Id = 2,
                            CustomerTypeId = 2,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(6580),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(6570),
                            IsDeleted = false,
                            Percentage = 10m
                        },
                        new
                        {
                            Id = 3,
                            CustomerTypeId = 3,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(6580),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 472, DateTimeKind.Local).AddTicks(6580),
                            IsDeleted = false,
                            Percentage = 5m
                        });
                });

            modelBuilder.Entity("DiscountAPI.Core.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountedTotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("DiscountAPI.Core.Entities.InvoiceProducts", b =>
                {
                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceProducts");
                });

            modelBuilder.Entity("DiscountAPI.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGroceries")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 469, DateTimeKind.Local).AddTicks(6850),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 469, DateTimeKind.Local).AddTicks(3940),
                            IsDeleted = false,
                            IsGroceries = false,
                            Price = 20m,
                            ProductName = "Tshirt",
                            Quantity = 5
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 469, DateTimeKind.Local).AddTicks(7600),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 469, DateTimeKind.Local).AddTicks(7600),
                            IsDeleted = false,
                            IsGroceries = false,
                            Price = 200m,
                            ProductName = "Nike Ayakkabı",
                            Quantity = 50
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2021, 12, 14, 6, 37, 56, 469, DateTimeKind.Local).AddTicks(7610),
                            DateModified = new DateTime(2021, 12, 14, 6, 37, 56, 469, DateTimeKind.Local).AddTicks(7610),
                            IsDeleted = false,
                            IsGroceries = true,
                            Price = 20m,
                            ProductName = "Elma",
                            Quantity = 500
                        });
                });

            modelBuilder.Entity("DiscountAPI.Core.Entities.Customer", b =>
                {
                    b.HasOne("DiscountAPI.Core.Entities.CustomerType", "CustomerType")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("DiscountAPI.Core.Entities.Discount", b =>
                {
                    b.HasOne("DiscountAPI.Core.Entities.CustomerType", "CustomerType")
                        .WithOne("Discount")
                        .HasForeignKey("DiscountAPI.Core.Entities.Discount", "CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("DiscountAPI.Core.Entities.Invoice", b =>
                {
                    b.HasOne("DiscountAPI.Core.Entities.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DiscountAPI.Core.Entities.InvoiceProducts", b =>
                {
                    b.HasOne("DiscountAPI.Core.Entities.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("DiscountAPI.Core.Entities.Customer", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("DiscountAPI.Core.Entities.CustomerType", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Discount");
                });
#pragma warning restore 612, 618
        }
    }
}
